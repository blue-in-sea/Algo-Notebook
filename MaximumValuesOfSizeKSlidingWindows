public class MaximumValuesOfSizeKSlidingWindows {
  public List<Integer> maxWindows(int[] array, int k) {
    List<Integer> res = new ArrayList<>();
    // corner case
    if (array == null || array.length == 0) {
      return res;
    }
    //维护一个单调非递减序列
    Deque<Integer> dq = new ArrayDeque<>();
    for (int i = 0; i < array.length; i++) {
      while (!dq.isEmpty() && array[i] >= array[dq.peekFirst()]) {
        dq.pollFirst();
      }
      dq.offerFirst(i);
      if (i >= k - 1) {
        res.add(array[dq.peekLast()]);
      }
      while(!dq.isEmpty() && dq.peekLast() <= i - k + 1){
        dq.pollLast();
      }
    }
    return res;
  }
}
